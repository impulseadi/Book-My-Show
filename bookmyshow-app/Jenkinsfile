pipeline {
    agent any

    tools {
        jdk 'JAVA_HOME'
        nodejs 'NodeJS'
    }

    environment {
        SCANNER_HOME = tool 'sonar-scanner' 
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout from Git') {
            steps {
                git branch: 'feature', url: 'https://github.com/impulseadi/Book-My-Show.git'
                sh 'ls -la'  
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar') {  // Jenkins > System
                    sh '''
                        $SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectName=Aditya-project \
                        -Dsonar.projectKey=Aditya-project
                    '''
                }
            }
        }

        stage('Quality Gate') {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                    cd bookmyshow-app
                    ls -la  # Verify package.json exists
                    if [ -f package.json ]; then
                        rm -rf node_modules package-lock.json  # Remove old dependencies
                        npm i chokidar
                        npm install  # Install fresh dependencies
                    else
                        echo "Error: package.json not found in bookmyshow-app!"
                        exit 1
                    fi
                '''
            }
        }

        stage('Docker Build & Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred') {
                        sh ''' 
                            echo "Building Docker image..."
                            docker build --no-cache -t adi0901/bms:latest -f bookmyshow-app/Dockerfile bookmyshow-app

                            echo "Pushing Docker image to registry..."
                            docker push adi0901/bms:latest
                        '''
                    }
                }
            }
        }

        stage('Deploy to Container') {
            steps {
                sh ''' 
                    echo "Stopping and removing old container..."
                    docker stop bms || true
                    docker rm bms || true

                    echo "Running new container on port 3000..."
                    docker run -d --restart=always --name bms -p 3001:3000 adi0901/bms:latest

                    echo "Checking running containers..."
                    docker ps -a

                    echo "Fetching logs..."
                    sleep 5  # Give time for the app to start
                    docker logs bms
                '''
            }
        }
    }

    post {
        success {
            emailext (
                subject: "SUCCESS: SonarQube Quality Gate Passed",
                body: """
                    Hi Team,
                    
                    The SonarQube quality gate passed successfully.

                    You can view the report here:
                    http://13.58.183.234:9000/dashboard?id=Aditya-project
                    username: admin, passwd: admin@Sonar10

                    If you want to download a PDF report, please use the SonarQube interface or a PDF plugin.

                    Regards,
                    Jenkins
                """,
                to: 'adigupta.951@gmail.com'
            )
        }

        failure {
            emailext (
                subject: "FAILED: SonarQube Quality Gate",
                body: """
                    Hi Team,
                    
                    The SonarQube quality gate has failed.
                    
                    Please check the details:
                    http://13.58.183.234:9000/dashboard?id=Aditya-project
                    username: admin, passwd: admin@Sonar10
                    
                    Regards,
                    Jenkins
                """,
                to: 'adigupta.951@gmail.com'
            )
        }
    }
}